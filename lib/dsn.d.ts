export type dsnObject = {
    softwareName: string | undefined;
    provider: string | undefined;
    softwareVersion: string | undefined;
    dsnVersion: string | undefined;
    type: string | undefined;
    totalRows: string | undefined;
    month: string | undefined;
};
export type ContributionFund = {
    id: string;
};
export type societyObject = {
    siren: string | undefined;
    nic: string | undefined;
    apen: string | undefined;
    adress1: string | undefined;
    adress2: string | undefined;
    adress3: string | undefined;
    zipCode: string | undefined;
    city: string | undefined;
};
export type EmployeeObject = {
    numSS: string;
    lastname: string;
    surname: string;
    firstname: string;
    sex: string;
    birthday: string;
    placeOfBith: string;
    address1: string;
    codeZip: string;
    city: string;
    country: string;
    codeZipBith: string;
    countryBirth: string;
    address2: string;
    address3: string;
    email: string;
    employeeId: string;
    graduate: string;
    studies: string;
};
export type WorkContractObject = {
    startDate: string;
    status: string;
    retirement: string;
    pcs: string;
    pcsBis: string;
    employmentLabel: string;
    contract: string;
    publicDispPolitic: string;
    contractEndDate: string;
    DNACodeUnitTime: string;
    DSNWorkQuotaEstablishment: string;
    DSNWorkQuotaWorkContract: string;
    workTime: string;
    ss: string;
    idcc: string;
    mal: string;
    estabWorkPlace: string;
    vieillesse: string;
    pattern: string;
    vacation: string;
    rateProfessionalFess: string;
    foreigner: string;
    exclusionDsn: string;
    statusEmployment: string;
    unemployment: string;
    idPublicEmployer: string;
    methodUnemployment: string;
    joiningDate: string;
    denunciationDate: string;
    dateManagementAgreement: string;
    idAgreement: string;
    healthRiskDelegate: string;
    multipleJobCode: string;
    multipleEmployerCode: string;
    workAccidentRisk: string;
    idWorkAccidentRisk: string;
    positionCollectiveAgreement: string;
    apecita: string;
    rateAt: string;
    contributingFullTime: string;
    tip: string;
    useEstablishmentId: string;
    livePerfomances: string;
    licences: string;
    showId: string;
    showrunner: string;
    fpPcs: string;
    typePosition: string;
    fpQuotite: string;
    partTimeWork: string;
    serviceCode: string;
    fpIndice: string;
    fpIndiceMaj: string;
    NBI: string;
    indiceOriginal: string;
    article15: string;
    oldEstablishment: string;
    oldIndice: string;
    SPP: string;
    contractual: string;
    secondment: string;
    browsing: string;
    activityDutyRate: string;
    payLevel: string;
    echelon: string;
    coefficient: string;
    boeth: string;
    addPublicPolicy: string;
    arrangement: string;
    finaly: string;
    navy: string;
    cnieg: string;
    activityRate: string;
    grade: string;
    cti: string;
    finess: string;
};
export type establishmentObject = {
    siren: string;
    nic: string;
    apet: string;
    adress1: string;
    adress2: string;
    adress3: string;
    zipCode: string;
    country: string;
    idcc: string;
    legalStatus: string;
    opco: string;
    codeZip: string;
    city: string;
    date: string;
};
export type contributionFund = {
    collection: string;
    field: string;
    dsnStructure: string;
    name: string;
    value: string;
    idEstablishment: number;
    siret: string;
    date: string;
};
type mutualEmployee = {
    collection: string;
    field: string;
    dsnStructure: string;
    value: string;
    numSS: string;
    date: string;
};
export type contributionFundObject = {
    codeDsn: string;
    name: string;
    adress1: string;
    adress2?: string;
    adress3?: string;
    codeZip: string;
    city: string;
    siret: string;
    date: string;
};
export type mutualObject = {
    contractId?: string;
    organisme?: string;
    delegate?: string;
    covererd?: string;
    techId?: string;
    date: string;
};
export type mutualEmployeeObject = {
    option: string;
    pop: string;
    children: string;
    assign: string;
    numberAssign: string;
    otherAssign: string;
    idTechAffiliation: string;
    idTech: string;
    date: string;
};
export declare class DsnParser {
    private dsnVersion;
    private societyList;
    private establishmentList;
    private dsnList;
    private contributionFundList;
    private workContractList;
    private mutualList;
    private mutualEmployeeList;
    private employeeList;
    private numSSList;
    private sirenList;
    private idEstablishmentList;
    private extractions;
    private mutualIdList;
    private siren;
    private date;
    init(dir: string, options?: {
        controleDsnVersion: boolean;
        deleteFile: boolean;
    }): Promise<void>;
    get dsn(): dsnObject;
    get society(): societyObject;
    get establishment(): establishmentObject[];
    get contributionFund(): contributionFundObject[];
    get employee(): EmployeeObject[];
    get workContract(): WorkContractObject[];
    get employeeMutual(): mutualEmployee[];
    get mutual(): mutualObject[];
}
export {};
