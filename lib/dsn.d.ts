export type DsnObject = {
    softwareName: string;
    provider: string;
    softwareVersion: string;
    dsnVersion: string;
    type: string;
    totalRows: string;
    month: string;
};
export type SocietyObject = {
    siren: string;
    nic: string;
    apen: string;
    adress1: string;
    adress2?: string;
    adress3?: string;
    zipCode: string;
    city: string;
    date: string;
};
export type EmployeeObject = {
    numSS: string;
    lastname: string;
    surname: string;
    firstname: string;
    sex: string;
    birthday: string;
    placeOfBith: string;
    address1: string;
    codeZip: string;
    city: string;
    country: string;
    codeZipBith: string;
    countryBirth: string;
    address2?: string;
    address3?: string;
    email?: string;
    employeeId: string;
    graduate?: string;
    studies?: string;
    date: string;
};
export type WorkContractObject = {
    employeeId: string;
    startDate: string;
    status: string;
    retirement: string;
    pcs: string;
    pcsBis: string;
    employmentLabel: string;
    contract: string;
    publicDispPolitic: string;
    contractEndDate: string;
    DNACodeUnitTime: string;
    DSNWorkQuotaEstablishment: string;
    DSNWorkQuotaWorkContract: string;
    workTime: string;
    ss: string;
    idcc: string;
    mal: string;
    estabWorkPlace: string;
    vieillesse: string;
    pattern: string;
    vacation: string;
    rateProfessionalFess: string;
    foreigner: string;
    exclusionDsn: string;
    statusEmployment: string;
    unemployment: string;
    idPublicEmployer: string;
    methodUnemployment: string;
    joiningDate: string;
    denunciationDate: string;
    dateManagementAgreement: string;
    idAgreement: string;
    healthRiskDelegate: string;
    multipleJobCode: string;
    multipleEmployerCode: string;
    workAccidentRisk: string;
    idWorkAccidentRisk: string;
    positionCollectiveAgreement: string;
    apecita: string;
    rateAt: string;
    contributingFullTime: string;
    tip: string;
    useEstablishmentId: string;
    livePerfomances: string;
    licences: string;
    showId: string;
    showrunner: string;
    fpPcs?: string;
    typePosition?: string;
    fpQuotite?: string;
    partTimeWork?: string;
    serviceCode?: string;
    fpIndice?: string;
    fpIndiceMaj?: string;
    NBI?: string;
    indiceOriginal?: string;
    article15?: string;
    oldEstablishment?: string;
    oldIndice?: string;
    SPP?: string;
    contractual?: string;
    secondment?: string;
    browsing?: string;
    activityDutyRate?: string;
    payLevel?: string;
    echelon?: string;
    coefficient?: string;
    boeth: string;
    addPublicPolicy?: string;
    arrangement?: string;
    finaly?: string;
    navy?: string;
    cnieg?: string;
    activityRate?: string;
    grade?: string;
    cti?: string;
    finess?: string;
    date: string;
};
export type EstablishmentObject = {
    siren: string;
    nic: string;
    apet: string;
    adress1: string;
    adress2?: string;
    adress3?: string;
    zipCode: string;
    country: string;
    idcc: string;
    legalStatus: string;
    opco: string;
    codeZip: string;
    city: string;
    date: string;
};
export type ContributionFund = {
    collection: string;
    field: string;
    dsnStructure: string;
    name: string;
    value: string;
    idEstablishment: number;
    siret: string;
    date: string;
};
type MutualEmployee = {
    collection: string;
    field: string;
    dsnStructure: string;
    value: string;
    numSS: string;
    date: string;
};
export type ContributionFundObject = {
    codeDsn: string;
    name: string;
    adress1: string;
    adress2?: string;
    adress3?: string;
    codeZip: string;
    city: string;
    siret: string;
    date: string;
};
export type MutualObject = {
    contractId?: string;
    organisme?: string;
    delegate?: string;
    covererd?: string;
    techId?: string;
    date: string;
};
export type MutualEmployeeObject = {
    employeeId: string;
    option: string;
    pop: string;
    children: string;
    assign: string;
    numberAssign: string;
    otherAssign: string;
    idTechAffiliation: string;
    idTech: string;
    date: string;
};
export type BaseObject = {
    employeeId: string;
    idBase: string;
    startDate: string;
    endDate: string;
    amount: string;
    idTechAff?: string;
    idContract?: string;
    crm?: string;
    date: string;
};
export type ContributionObject = {
    employeeId: string;
    idContribution: string;
    ops: string;
    baseContribution: string;
    amountContribution: string;
    idInsee?: string;
    crmContribution?: string;
    rateContribution?: string;
    date: string;
};
export type EstablishmentContributionObject = {
    codeContribution: string;
    startDat: string;
    endDate: string;
    ref?: string;
    crm?: string;
    date: string;
};
type AssignementObject = {
    assignement: string;
    date: string;
};
export declare class DsnParser {
    private dsnVersion;
    private societyList;
    private establishmentList;
    private dsnList;
    private contributionFundList;
    private workContractList;
    private mutualList;
    private mutualEmployeeList;
    private employeeList;
    private numSSList;
    private idEstablishmentList;
    private extractions;
    private mutualIdList;
    private baseList;
    private numSSEmployeeIdList;
    private contributionList;
    private establishmentContributionList;
    private siren;
    private date;
    init(dir: string, options?: {
        controleDsnVersion: boolean;
        deleteFile: boolean;
    }): Promise<void>;
    get dsn(): DsnObject;
    get society(): SocietyObject;
    get establishment(): EstablishmentObject[];
    get contributionFund(): ContributionFundObject[];
    get employee(): EmployeeObject[];
    get workContract(): WorkContractObject[];
    get employeeMutual(): MutualEmployee[];
    get mutual(): MutualObject[];
    get base(): BaseObject[];
    get contribution(): ContributionObject[];
    get assignement(): AssignementObject[];
}
export {};
